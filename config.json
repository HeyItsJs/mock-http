{
  "port": 4122,
  "routes": [
    {
      "path": "/v1/config/projects",
      "method": "GET",
      "statusCode": 200,
      "response": {
        "projects": [
          {
            "id": "todo_app",
            "name": "My Todo App",
            "secret": "00968748-833d-42e1-8cc9-1e711e606f62",
            "modules": {
              "crud": {
                "mongo": {
                  "conn": "localhost:8080",
                  "enabled": true,
                  "type": "mongo",
                  "collections": {}
                }
              },
              "eventing": {
                "enabled": true,
                "dbType": "mongo",
                "col": "event_logs",
                "rules": {
                  "customrule1": {
                    "type": "custometype1",
                    "retries": 2,
                    "timeout": 500,
                    "name": "customrule1",
                    "url": "foo.bar/abc"
                  }
                }
              },
              "deployments": {
                "services": [
                  {
                    "id": "service1",
                    "name": "",
                    "projectId": "todo_app",
                    "version": "v1",
                    "env": "",
                    "labels": {},
                    "scale": {
                      "replicas": 3,
                      "minReplicas": 1,
                      "maxReplicas": 10,
                      "concurrency": 200
                    },
                    "tasks": [
                      {
                        "id": "service1",
                        "name": "",
                        "ports": [
                          {
                            "name": "",
                            "protocol": "http",
                            "port": 5500
                          }
                        ],
                        "resources": {
                          "cpu": 10,
                          "memory": 100
                        },
                        "docker": {
                          "image": "spaceuptech/hello-world",
                          "creds": {
                            "username": "jayesh",
                            "pass": "123"
                          },
                          "cmd": []
                        },
                        "env": {},
                        "runtime": "image"
                      }
                    ],
                    "affinity": [],
                    "whitelists": [
                      {
                        "projectId": "todo_app",
                        "service": "*"
                      }
                    ],
                    "upstreams": [
                      {
                        "projectId": "todo_app",
                        "service": "*"
                      }
                    ]
                  }
                ]
              },
              "routes": [
                {
                  "id": "1",
                  "source": {
                    "hosts": ["foo.bar", "space.cloud"],
                    "url": "/v1/api/",
                    "rewrite": "/api/",
                    "type": "prefix"
                  },
                  "dest": {
                    "host": "service1.todo_app.svc.cluster.local",
                    "port": "5500"
                  }
                }
              ],
              "letsencrypt": {
                "domains": ["foo.bar"]
              },
              "auth": {},
              "services": {
                "externalServices": {}
              },
              "secrets": [
                {
                  "name": "DB Credentials",
                  "type": "env",
                  "rootPath": "",
                  "data": {
                    "DB_NAME": "",
                    "DB_PASSWORD": ""
                  }
                },
                {
                  "name": "S3 Credentials",
                  "type": "file",
                  "rootPath": "~/.aws",
                  "data": {
                    "credentials.json": ""
                  }
                },
                {
                  "name": "Docker Credentials",
                  "type": "docker",
                  "rootPath": "",
                  "data": {
                    "username": "",
                    "password": "",
                    "url": ""
                  }
                }
              ],
              "fileStore": {
                "enabled": false
              }
            }
          }
        ]
      }
    },
    {
      "path": "/v1/config/env",
      "method": "GET",
      "statusCode": 200,
      "response": {
        "isProd": true,
        "version": "0.16.0"
      }
    },
    {
      "path": "/v1/config/refresh-token",
      "method": "GET",
      "statusCode": 200,
      "response": {
        "token": "some-token"
      }
    },
    {
      "path": "/v1/config/login",
      "method": "POST",
      "statusCode": 200,
      "request": {
        "user": "",
        "pass": ""
      },
      "response": {
        "token": "some-token"
      }
    },
    {
      "path": "/v1/config/projects",
      "method": "POST",
      "statusCode": 200,
      "request": {
        "id": "",
        "name": "",
        "secret": "",
        "modules": {}
      },
      "response": {}
    },
    {
      "path": "/v1/config/projects/:project",
      "method": "DELETE",
      "statusCode": 200,
      "response": {}
    },
    {
      "path": "/v1/config/projects/:project/config",
      "method": "POST",
      "request": {
        "secret": ""
      },
      "statusCode": 200,
      "response": {}
    },
    {
      "path": "/v1/config/projects/:project/database/:db/connection-state",
      "method": "GET",
      "statusCode": 200,
      "response": {
        "status": true
      }
    },
    {
      "path": "/v1/config/projects/:project/database/:db/config",
      "method": "POST",
      "request": {
        "enabled": true,
        "conn": "localhost:8080"
      },
      "statusCode": 200,
      "response": {}
    },
    {
      "path": "/v1/config/projects/:project/database/:db/list-collections",
      "method": "GET",
      "statusCode": 200,
      "response": {
        "collections": [
          "users",
          "posts"
        ]
      }
    },
    {
      "path": "/v1/config/projects/:project/database/:db/modify-schema",
      "method": "POST",
      "request": {
        "collections": {
          "users": {
            "schema": "type users"
          }
        }
      },
      "statusCode": 200,
      "response": {}
    },
    {
      "path": "/v1/config/projects/:project/database/:db/reload-schema",
      "method": "POST",
      "statusCode": 200,
      "response": {
        "collections": {
          "users": {
            "schema": "type users"
          }
        }
      }
    },
    {
      "path": "/v1/config/projects/:project/database/:db/collections/:col",
      "method": "DELETE",
      "request": {
        "schema": "type users"
      },
      "statusCode": 200,
      "response": {}
    },
    {
      "path": "/v1/config/projects/:project/database/:db/collections/:col/modify-schema",
      "method": "POST",
      "request": {
        "schema": "type users"
      },
      "statusCode": 200,
      "response": {}
    },
    {
      "path": "/v1/config/projects/:project/database/:db/collections/:col/inspect-schema",
      "method": "GET",
      "statusCode": 200,
      "response": {
        "schema": "type users"
      }
    },
    {
      "path": "/v1/config/projects/:project/database/:db/collections/:col/rules",
      "method": "POST",
      "request": {
        "isRealtimeEnabled": true,
        "rules": {}
      },
      "statusCode": 200,
      "response": {}
    },
    {
      "path": "/v1/config/projects/:project/file-storage/connection-state",
      "method": "GET",
      "statusCode": 200,
      "response": {
        "status": true
      }
    },
    {
      "path": "/v1/config/projects/:project/file-storage/config",
      "method": "POST",
      "request": {
        "enabled": true,
        "bucket": "",
        "conn": "",
        "endpoint": "",
        "storeType": ""
      },
      "statusCode": 200,
      "response": {}
    },
    {
      "path": "/v1/config/projects/:project/file-storage/rules/:ruleName",
      "method": "POST",
      "request": {
        "prefix": "",
        "rule": {}
      },
      "statusCode": 200,
      "response": {}
    },
    {
      "path": "/v1/config/projects/:project/file-storage/rules/:ruleName",
      "method": "DELETE",
      "statusCode": 200,
      "response": {}
    },
    {
      "path": "/v1/config/projects/:project/event-triggers/config",
      "method": "POST",
      "request": {
        "enabled": true,
        "dbType": "",
        "col": ""
      },
      "statusCode": 200,
      "response": {}
    },
    {
      "path": "/v1/config/projects/:project/event-triggers/queue",
      "method": "POST",
      "request": {
        "type": "",
        "data": {}
      },
      "statusCode": 200,
      "response": {}
    },
    {
      "path": "/v1/config/projects/:project/event-triggers/rules/:ruleName",
      "method": "POST",
      "request": {
        "type": "",
        "retries": 2,
        "url": "localhost",
        "options": {}
      },
      "statusCode": 200,
      "response": {}
    },
    {
      "path": "/v1/config/projects/:project/eventing/rules/:typeName",
      "method": "POST",
      "request": {
       "rule": {}
      },
      "statusCode": 200,
      "response": {}
    },
    {
      "path": "/v1/config/projects/:project/eventing/rules/:typeName",
      "method": "DELETE",
      "statusCode": 200,
      "response": {}
    },
    {
      "path": "/v1/config/projects/:project/eventing/schema/:typeName",
      "method": "POST",
      "request": {
       "schema": {}
      },
      "statusCode": 200,
      "response": {}
    },
    {
      "path": "/v1/config/projects/:project/eventing/schema/:typeName",
      "method": "DELETE",
      "statusCode": 200,
      "response": {}
    },
    {
      "path": "/v1/config/projects/:project/event-triggers/rules/:ruleName",
      "method": "DELETE",
      "statusCode": 200,
      "response": {}
    },
    {
      "path": "/v1/config/projects/:project/services/:serviceName",
      "method": "POST",
      "request": {
        "url": "localhost",
        "endpoints": {}
      },
      "statusCode": 200,
      "response": {}
    },
    {
      "path": "/v1/config/projects/:project/services/:serviceName",
      "method": "DELETE",
      "statusCode": 200,
      "response": {}
    },
    {
      "path": "/v1/config/projects/:project/user-management/:provider",
      "method": "POST",
      "request": {
        "enabled": true
      },
      "statusCode": 200,
      "response": {}
    },
    {
      "path": "/v1/runner/services",
      "method": "POST",
      "statusCode": 200,
      "request": {
        "id": "service1"
      },
      "response": {}
    },
    {
      "path": "/v1/runner/:project/services/:service/:version",
      "method": "DELETE",
      "statusCode": 200,
      "response": {}
    },
    {
      "path": "/v1/runner/:project/secrets",
      "method": "POST",
      "statusCode": 200,
      "request": {
        "name": "DB Credentials",
        "type": "env",
        "rootPath": "",
        "data": {
          "DB_NAME": "mydb",
          "DB_PASSWORD": "some-secret-pw"
        }
      },
      "response": {}
    },
    {
      "path": "/v1/runner/:project/secrets/:secret",
      "method": "DELETE",
      "statusCode": 200,
      "response": {}
    },
    {
      "path": "/v1/runner/:project/secrets/:secret/:key",
      "method": "POST",
      "statusCode": 200,
      "request": {
        "value": "some-secret-key"
      },
      "response": {}
    },
    {
      "path": "/v1/runner/:project/secrets/:secret/:key",
      "method": "DELETE",
      "statusCode": 200,
      "response": {}
    },
    {
      "path": "/v1/config/projects/:project/routing/:routeId",
      "method": "POST",
      "statusCode": 200,
      "request": {
        "id": "route1"
      },
      "response": {}
    },
    {
      "path": "/v1/config/projects/:project/routing/:routeId",
      "method": "DELETE",
      "statusCode": 200,
      "response": {}
    },
    {
      "path": "/v1/config/projects/:project/letsencrypt",
      "method": "POST",
      "statusCode": 200,
      "request": {
        "domains": ["foo.bar"]
      },
      "response": {}
    }
  ]
}